import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.dfcac6be.js";const u=JSON.parse('{"title":"Custom Sensors","description":"","frontmatter":{},"headers":[],"relativePath":"reference/mysensors.md","filePath":"reference/mysensors.md","lastUpdated":1695748579000}'),p={name:"reference/mysensors.md"},o=l(`<h1 id="custom-sensors" tabindex="-1">Custom Sensors <a class="header-anchor" href="#custom-sensors" aria-label="Permalink to &quot;Custom Sensors&quot;">​</a></h1><p>You can add custom sensors by creating a sensors definition file called in <code>/share/hass-addon-sunsynk/mysensors.py</code>.</p><p>In it&#39;s most basic form a sensor the RS486 register and a name. You can find the RS485 protocol document at various places online, search the <a href="https://www.powerforum.co.za" target="_blank" rel="noreferrer">Power Forum</a> or <a href="https://github.com/kellerza/sunsynk/issues/59" target="_blank" rel="noreferrer">Github issue #59</a></p><p>The <code>/share/</code> folder can be accessed through the Samba addon in Home Assistant. You can create the <code>hass-addon-sunsynk</code> folder &amp; the <code>mysensors.py</code> file</p><p>This is a Python file and follows the same logic as the definitions.py &amp; definitions3p.py. It exposes a single <code>SENSORS</code> global variable to which you can add the individual sensor definitions.</p><p>An example <code>mysensors.py</code> file:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> sunsynk </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">AMPS</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">CELSIUS</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">KWH</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">VOLT</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">WATT</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> sunsynk.rwsensors </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> NumberRWSensor, SelectRWSensor, TimeRWSensor</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> sunsynk.sensors </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    MathSensor,</span></span>
<span class="line"><span style="color:#E1E4E8;">    Sensor,</span></span>
<span class="line"><span style="color:#E1E4E8;">    SensorDefinitions,</span></span>
<span class="line"><span style="color:#E1E4E8;">    TempSensor,</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">SENSORS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> SensorDefinitions()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">SENSORS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> Sensor(</span><span style="color:#79B8FF;">178</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;My Custom Sensor&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">WATT</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sunsynk </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">AMPS</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">CELSIUS</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">KWH</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">VOLT</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">WATT</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sunsynk.rwsensors </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> NumberRWSensor, SelectRWSensor, TimeRWSensor</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sunsynk.sensors </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    MathSensor,</span></span>
<span class="line"><span style="color:#24292E;">    Sensor,</span></span>
<span class="line"><span style="color:#24292E;">    SensorDefinitions,</span></span>
<span class="line"><span style="color:#24292E;">    TempSensor,</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">SENSORS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> SensorDefinitions()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">SENSORS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> Sensor(</span><span style="color:#005CC5;">178</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;My Custom Sensor&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">WATT</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Once you have a file, you will see it in your addon&#39;s startup log:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">2023-03-19 16:25:00,156 INFO    Importing /share/hass-addon-sunsynk/mysensors.py...</span></span>
<span class="line"><span style="color:#e1e4e8;">2023-03-19 16:25:00,158 INFO      custom sensors: my_custom_sensor</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">2023-03-19 16:25:00,156 INFO    Importing /share/hass-addon-sunsynk/mysensors.py...</span></span>
<span class="line"><span style="color:#24292e;">2023-03-19 16:25:00,158 INFO      custom sensors: my_custom_sensor</span></span></code></pre></div><h2 id="using-the-sensor" tabindex="-1">Using the sensor <a class="header-anchor" href="#using-the-sensor" aria-label="Permalink to &quot;Using the sensor&quot;">​</a></h2><p>Once a sensor is loaded, you still have to add it to your configuration:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">SENSORS</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;"> - </span><span style="color:#9ECBFF;">my_custom_sensor</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">SENSORS</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;"> - </span><span style="color:#032F62;">my_custom_sensor</span></span></code></pre></div><p>You can also add <strong>all</strong> the custom sensors, using the special group called <code>mysensors</code>.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">SENSORS</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">mysensors</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">SENSORS</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">mysensors</span></span></code></pre></div><h2 id="more-examples" tabindex="-1">More examples <a class="header-anchor" href="#more-examples" aria-label="Permalink to &quot;More examples&quot;">​</a></h2><h3 id="time-sensor" tabindex="-1">Time sensor <a class="header-anchor" href="#time-sensor" aria-label="Permalink to &quot;Time sensor&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Write is only partially implemented in the example below</p></div><details class="details custom-block"><summary>Details</summary><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> attr</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># from sunsynk import AMPS, CELSIUS, KWH, VOLT, WATT</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> sunsynk.rwsensors </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> RWSensor, ResolveType</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> sunsynk.sensors </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> RegType, ValType, SensorDefinitions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">SENSORS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> SensorDefinitions()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@attr.define</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">slots</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">eq</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">False</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SystemTimeRWSensor</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">RWSensor</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Read &amp; write time sensor.&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value_to_reg</span><span style="color:#E1E4E8;">(self, value: ValType, resolve: ResolveType) -&gt; RegType:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Get the reg value from a display value.&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        redt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> re.compile(</span><span style="color:#F97583;">r</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">(</span><span style="color:#DBEDFF;">2</span><span style="color:#79B8FF;">\\d</span><span style="color:#F97583;">{3}</span><span style="color:#79B8FF;">)</span><span style="color:#DBEDFF;">-</span><span style="color:#79B8FF;">(\\d</span><span style="color:#F97583;">{2}</span><span style="color:#79B8FF;">)</span><span style="color:#DBEDFF;">-</span><span style="color:#79B8FF;">(\\d</span><span style="color:#F97583;">{2}</span><span style="color:#79B8FF;">)</span><span style="color:#DBEDFF;"> </span><span style="color:#79B8FF;">(\\d</span><span style="color:#F97583;">{2}</span><span style="color:#79B8FF;">)</span><span style="color:#DBEDFF;">:</span><span style="color:#79B8FF;">(\\d</span><span style="color:#F97583;">{2}</span><span style="color:#79B8FF;">)</span><span style="color:#DBEDFF;">:</span><span style="color:#79B8FF;">(\\d</span><span style="color:#F97583;">{2}</span><span style="color:#79B8FF;">)</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        match </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> redt.fullmatch(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> match:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">raise</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ValueError</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Invalid datetime </span><span style="color:#79B8FF;">{value}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        y, m, d </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(match.group(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(match.group(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)), </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(match.group(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">        h, mn, s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(match.group(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">)), </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(match.group(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">)), </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(match.group(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">        regs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">            (y </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> m,</span></span>
<span class="line"><span style="color:#E1E4E8;">            (d </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> h,</span></span>
<span class="line"><span style="color:#E1E4E8;">            (mn </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> s,</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">raise</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ValueError</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">y</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">m</span><span style="color:#F97583;">:02</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">d</span><span style="color:#F97583;">:02</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">h</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">mn</span><span style="color:#F97583;">:02</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">:02</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;"> ==&gt; </span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">regs</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> regs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reg_to_value</span><span style="color:#E1E4E8;">(self, regs: RegType) -&gt; ValType:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Decode the register.&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ((regs[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">FF00</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2000</span></span>
<span class="line"><span style="color:#E1E4E8;">        m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> regs[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">FF</span></span>
<span class="line"><span style="color:#E1E4E8;">        d </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (regs[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">FF00</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span></span>
<span class="line"><span style="color:#E1E4E8;">        h </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> regs[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">FF</span></span>
<span class="line"><span style="color:#E1E4E8;">        mn </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (regs[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">FF00</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span></span>
<span class="line"><span style="color:#E1E4E8;">        s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> regs[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">FF</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">y</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">m</span><span style="color:#F97583;">:02</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">d</span><span style="color:#F97583;">:02</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">h</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">mn</span><span style="color:#F97583;">:02</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">:02</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">SENSORS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> SystemTimeRWSensor((</span><span style="color:#79B8FF;">22</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">23</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;Date&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">unit</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> attr</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> re</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># from sunsynk import AMPS, CELSIUS, KWH, VOLT, WATT</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sunsynk.rwsensors </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> RWSensor, ResolveType</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sunsynk.sensors </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> RegType, ValType, SensorDefinitions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">SENSORS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> SensorDefinitions()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@attr.define</span><span style="color:#24292E;">(</span><span style="color:#E36209;">slots</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, </span><span style="color:#E36209;">eq</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SystemTimeRWSensor</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">RWSensor</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;Read &amp; write time sensor.&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value_to_reg</span><span style="color:#24292E;">(self, value: ValType, resolve: ResolveType) -&gt; RegType:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;Get the reg value from a display value.&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        redt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> re.compile(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">(</span><span style="color:#032F62;">2</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#005CC5;">)</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">(\\d</span><span style="color:#D73A49;">{2}</span><span style="color:#005CC5;">)</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">(\\d</span><span style="color:#D73A49;">{2}</span><span style="color:#005CC5;">)</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">(\\d</span><span style="color:#D73A49;">{2}</span><span style="color:#005CC5;">)</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">(\\d</span><span style="color:#D73A49;">{2}</span><span style="color:#005CC5;">)</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">(\\d</span><span style="color:#D73A49;">{2}</span><span style="color:#005CC5;">)</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        match </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> redt.fullmatch(value)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> match:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ValueError</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Invalid datetime </span><span style="color:#005CC5;">{value}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        y, m, d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(match.group(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(match.group(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)), </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(match.group(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">        h, mn, s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(match.group(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)), </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(match.group(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">)), </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(match.group(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">        regs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">            (y </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> m,</span></span>
<span class="line"><span style="color:#24292E;">            (d </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> h,</span></span>
<span class="line"><span style="color:#24292E;">            (mn </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> s,</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ValueError</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">y</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">m</span><span style="color:#D73A49;">:02</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">d</span><span style="color:#D73A49;">:02</span><span style="color:#005CC5;">}</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">{</span><span style="color:#24292E;">h</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">mn</span><span style="color:#D73A49;">:02</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">:02</span><span style="color:#005CC5;">}</span><span style="color:#032F62;"> ==&gt; </span><span style="color:#005CC5;">{</span><span style="color:#24292E;">regs</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> regs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reg_to_value</span><span style="color:#24292E;">(self, regs: RegType) -&gt; ValType:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;Decode the register.&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ((regs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">FF00</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2000</span></span>
<span class="line"><span style="color:#24292E;">        m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> regs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">FF</span></span>
<span class="line"><span style="color:#24292E;">        d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (regs[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">FF00</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span></span>
<span class="line"><span style="color:#24292E;">        h </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> regs[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">FF</span></span>
<span class="line"><span style="color:#24292E;">        mn </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (regs[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">FF00</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span></span>
<span class="line"><span style="color:#24292E;">        s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> regs[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">FF</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">y</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">m</span><span style="color:#D73A49;">:02</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">d</span><span style="color:#D73A49;">:02</span><span style="color:#005CC5;">}</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">{</span><span style="color:#24292E;">h</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">mn</span><span style="color:#D73A49;">:02</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">:02</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">SENSORS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> SystemTimeRWSensor((</span><span style="color:#005CC5;">22</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">23</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">24</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;Date&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">unit</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></details>`,18),e=[o];function t(r,c,y,E,F,i){return n(),a("div",null,e)}const m=s(p,[["render",t]]);export{u as __pageData,m as default};
